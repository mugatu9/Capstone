@model CSD480Group3Capstone001.Models.Unit

<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UnitNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UnitNumber)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.SqrFootage)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SqrFootage)
        </dd>
        <dt class="col-sm-2">
            Building Address
        </dt>
        <dd class="col-sm-10">
            @Model.Building.Address @Model.Building.City @Model.Building.State @Model.Building.Zip
        </dd>
        @{
            <dt class="col-sm-2">
                @{
                    var list = Model.TenantUnits.Where(ut => DateTime.Compare(ut.MovedOutDate, DateTime.Now) > 0);
                    if (list.Any())
                    {
                        <text>Tenants</text>
                    }
                    else
                    {
                        <text>Previous Tenant</text>
                    }
                }

            </dt>

            <dd class="col-sm-10">
                @{
                    
                    if (list.Any())
                    {

                        @foreach (TenantUnit tu in list)
                        {

                <p>@tu.tenant.FirstName @tu.tenant.LastName, Move In: @tu.MovedInDate.Date.ToString("MM/dd/yyyy"), Move Out:@tu.MovedOutDate.Date.ToString("MM/dd/yyyy")</p>

                        }

                    }
                    else
                    {
                        var tu = Model.TenantUnits.OrderBy(tu => tu.MovedOutDate).FirstOrDefault();
                        if (tu != null)
                        {
                <p>@tu.tenant.FirstName @tu.tenant.LastName, Move In: @tu.MovedInDate.Date.ToString("MM/dd/yyyy"), Move Out:@tu.MovedOutDate.Date.ToString("MM/dd/yyyy")</p>
                        }
                        else
                        {
                            <p>No Previous Tenant</p>
                        }
                    }

                }
            </dd>
            <dt class="col-sm-2">
                Vehicles
            </dt>
            <dd class="col-sm-10">
                @{
                    list = Model.TenantUnits.Where(ut => DateTime.Compare(ut.MovedOutDate, DateTime.Now) > 0);
                    if (list.Any())
                    {
                        @foreach (TenantUnit tu in Model.TenantUnits.Where(ut => DateTime.Compare(ut.MovedOutDate, DateTime.Now) > 0))
                        {
                            foreach (Vehicle v in tu.tenant.Vehicles)
                            {
                                <p>@v.Color @v.Make @v.Model plate number: @v.LicensePlate</p>
                            }
                        }
                    }
                    else
                    {
                        <p>No Vehicles</p>
                    }
                }
            </dd>
        }
    </dl>
</div>

