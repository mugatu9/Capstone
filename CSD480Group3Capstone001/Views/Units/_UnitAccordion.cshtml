@using System.Runtime.CompilerServices
@using System.Runtime.ExceptionServices
@using System.Text
@using CSD480Group3Capstone001.Controllers

@model IEnumerable<CSD480Group3Capstone001.Models.Unit>


<div class="row accordion mt-2" id="tenantAccordion">
        @{
            int index = 0;
        }
        @foreach (var unit in Model)
        {
            <div class="col-11 ml-auto mr-auto">
                <div class="card-header row border border-dark rounded p-0 mt-2" id="@GetAccordionId("header",index)">
                    <div class="col-12 d-flex">
                        <div class="p-2 text-center">
                            <span class="font-weight-bold p-2">Unit Number</span>
                            <br />#@unit.UnitNumber
                        </div>
                        <div class="p-2 text-center">
                            <span class="font-weight-bold">Current Tenant</span>
                            <br />
                            @{
                                string currTenant = unit.TenantUnits.Where(tu => DateTime.Compare(tu.MovedOutDate, DateTime.Now) > 0).Select(tu => tu.tenant.FirstName + " " + tu.tenant.LastName).FirstOrDefault();
                                if (currTenant != null)
                                {
                                    @currTenant
                                }
                                else
                                {
                                    <span>Unoccupied</span>
                                }
                            }

                        </div>
                        <div class="p-2 text-center d-none d-sm-block">
                            <span class="font-weight-bold">Number of Tenants</span>
                            <br />@unit.TenantUnits.Where(tu => DateTime.Compare(tu.MovedOutDate, DateTime.Now) > 0).Count()
                        </div>
                        <div class="p-2 text-center d-none d-sm-block">
                            <span class="font-weight-bold">Square Footage</span>
                            <br />@unit.SqrFootage
                        </div>
                        <div class="p-2 text-centerd-none d-sm-block">
                            <span class="font-weight-bold">Building Address</span>
                            <br />@unit.Building.Address
                        </div>
                        <div class="p-2 ml-auto align-self-center">
                            <button id="@GetAccordionId("expand", index)" class="btn-sm border border-dark btn-primary d-inline" type="button" aria-expanded="false" data-toggle="collapse" data-target="#@GetAccordionId("body",index),@GetAccordionId("expand",index),@GetAccordionId("hide",index)" aria-controls="@GetAccordionId("body",index)">Expand</button>
                        </div>
                    </div>
                </div>
                <div id="@GetAccordionId("body",index)" class="collapse" aria-labelledby="@GetAccordionId("header",index)" data-parent="#tenantAccordion">
                    <div class="card-body">
                        @await Html.PartialAsync("~/Views/Units/_DisplayUnit.cshtml", unit, new ViewDataDictionary(ViewData))
                    </div>
                </div>
            </div>
            index++;
        }
    </div>





@functions{
    private string GetAccordionId(string str,int num)
    {
        return str + num.ToString();
    }

    private void DisplaySearchedCat()
    {
        List<string> searchAreas = (List<string>)ViewData["searchAreas"];
        string searchBy = (string)ViewData["searchBy"];

        if (!string.IsNullOrEmpty(searchBy))
        {
            if (!searchBy.Equals(searchAreas[0]))//Do nothing Name is always displayed
            {
                

            }else if (searchBy.Equals(searchAreas[1]))//License Plate
            {

            }
        }
    }
}